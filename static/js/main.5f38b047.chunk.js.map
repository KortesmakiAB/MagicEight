{"version":3,"sources":["EightBall.js","App.js","reportWebVitals.js","index.js"],"names":["EightBall","answersArr","randIdx","Math","floor","random","length","initialAnswers","msg","color","useState","answer","setAnswer","className","style","background","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA2BeA,EAxBG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACXC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWK,QAChDC,EAAiB,CAAEC,IAAI,sBAAuBC,MAAO,SAC3D,EAA4BC,mBAASH,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KAMA,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,oBAAoBC,MAAQ,CAACC,WAAWJ,EAAOF,OAASO,QAN3D,WAChBJ,EAAUX,EAAWC,KAKjB,SACI,qCACMS,EAAOH,QAGjB,8BACI,wBAAQK,UAAU,mBAAmBG,QAAU,kBAAMJ,EAAUL,IAA/D,yB,MCeDU,MAhCf,WAwBE,OACE,sBAAKJ,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWZ,WA1BI,CACjB,CAAEO,IAAK,iBAAkBC,MAAO,SAChC,CAAED,IAAK,sBAAuBC,MAAO,SACrC,CAAED,IAAK,mBAAoBC,MAAO,SAClC,CAAED,IAAK,oBAAqBC,MAAO,SACnC,CAAED,IAAK,sBAAuBC,MAAO,SACrC,CAAED,IAAK,oBAAqBC,MAAO,SACnC,CAAED,IAAK,eAAgBC,MAAO,SAC9B,CAAED,IAAK,gBAAiBC,MAAO,SAC/B,CAAED,IAAK,OAAQC,MAAO,SACtB,CAAED,IAAK,sBAAuBC,MAAO,aACrC,CAAED,IAAK,yBAA0BC,MAAO,aACxC,CAAED,IAAK,mBAAoBC,MAAO,aAClC,CAAED,IAAK,2BAA4BC,MAAO,aAC1C,CAAED,IAAK,sBAAuBC,MAAO,aACrC,CAAED,IAAK,6BAA8BC,MAAO,aAC5C,CAAED,IAAK,qBAAsBC,MAAO,OACpC,CAAED,IAAK,kBAAmBC,MAAO,OACjC,CAAED,IAAK,qBAAsBC,MAAO,OACpC,CAAED,IAAK,uBAAwBC,MAAO,OACtC,CAAED,IAAK,iBAAkBC,MAAO,cCZrBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f38b047.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './EightBall.css';\r\n\r\nconst EightBall = ({ answersArr }) => {\r\n    const randIdx = Math.floor(Math.random() * answersArr.length);\r\n    const initialAnswers = { msg:\"Think of a Question\", color: \"black\" };\r\n    const [answer, setAnswer] = useState(initialAnswers);\r\n\r\n    const handleClick = () => {\r\n        setAnswer(answersArr[randIdx]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"EightBall\">\r\n            <div className=\"EightBall-wrapper\" style={ {background:answer.color} } onClick={ handleClick }>\r\n                <blockquote>\r\n                    { answer.msg }\r\n                </blockquote>\r\n            </div>\r\n            <div>\r\n                <button className=\"EightBall-button\" onClick={ () => setAnswer(initialAnswers) }>Reset</button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default EightBall;","import EightBall from './EightBall';\nimport './App.css';\n\nfunction App() {\n  const answersArr = [\n    { msg: \"It is certain.\", color: \"green\" },\n    { msg: \"It is decidedly so.\", color: \"green\" },\n    { msg: \"Without a doubt.\", color: \"green\" },\n    { msg: \"Yes - definitely.\", color: \"green\" },\n    { msg: \"You may rely on it.\", color: \"green\" },\n    { msg: \"As I see it, yes.\", color: \"green\" },\n    { msg: \"Most likely.\", color: \"green\" },\n    { msg: \"Outlook good.\", color: \"green\" },\n    { msg: \"Yes.\", color: \"green\" },\n    { msg: \"Signs point to yes.\", color: \"goldenrod\" },\n    { msg: \"Reply hazy, try again.\", color: \"goldenrod\" },\n    { msg: \"Ask again later.\", color: \"goldenrod\" },\n    { msg: \"Better not tell you now.\", color: \"goldenrod\" },\n    { msg: \"Cannot predict now.\", color: \"goldenrod\" },\n    { msg: \"Concentrate and ask again.\", color: \"goldenrod\" },\n    { msg: \"Don't count on it.\", color: \"red\" },\n    { msg: \"My reply is no.\", color: \"red\" },\n    { msg: \"My sources say no.\", color: \"red\" },\n    { msg: \"Outlook not so good.\", color: \"red\" },\n    { msg: \"Very doubtful.\", color: \"red\" },\n  ];\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Eight Ball</h1>\n      <EightBall answersArr={answersArr} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}